name: Terraform CI-CD
on:
  push:
    branches: [ main ]
  pull_request:

# Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

# These environment variables are used by the Terraform Azure provider for OIDC authentication.
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_ACCESS_KEY: "${{ secrets.ARM_ACCESS_KEY }}"

defaults:
  run:
    working-directory: ./infra/tf-app  

jobs:
  tflint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache plugin dir
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        env:
          # Avoid rate limiting when downloading plugins
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        id: tflint
        run: tflint -f compact

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: production
    outputs:
      tfplanExitCode: ${{ steps.plan.outcome }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan
          echo "tfplanExitCode=$?" >> $GITHUB_ENV

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    name: 'Terraform Apply'
    if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == 2
    runs-on: ubuntu-latest
    environment: production
    needs: [terraform-plan]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
